/*
 * MOTOR_2.c
 *
 * 문제2. 자연풍 선풍기에 스위치 2개 SW1, SW2를 추가하여, SW1은 기동/정지를 결정하고,
  SW2는 약풍/중풍/강풍 기능이 순서대로 동작하도록 하는 '내 맘대로 선풍기'를 제작한다.
 */ 

#include <avr/io.h>
#include <avr/interrupt.h>
#define F_CPU 16000000UL
#define __DELAY_BACKWARD_COMPATIBLE__

#include <util/delay.h>

// 모터 제어 (PB7=AIN1, PB6=AIN2, PB5=PWMA, PB4=STBY)
#define MOTOR_CW 0xb0          // 모터 Forward : AIN1=1, AIN2=0, PWMA=1, STBY=1
#define MOTOR_BRAKE 0xd0       // 모터 Short Brake : AIN1=1, AIN2=1, PWMA=0, STBY=1
#define MOTOR_STOP 0x30        // 모터 Stop : AIN1=0, AIN2=0, PWMA=1, STBY=1
#define MOTOR_STANDBY 0x00     // 모터 Standby : AIN1=0, AIN2=0, PWMA=0, STBY=0
/// 모터 상태
#define GO 0
#define BREAK 1
#define STOP 2


// Motor Speed
#define STOP_SPEED 0            // duty cycle 0% 값
#define LOW_SPEED 77            // duty cycle 30% 값 (=255*0.3)
#define MID_SPEED 153           // duty cycle 60% 값 (=255*0.6)
#define HIGH_SPEED 230          // duty cycle 90% 값 (=255*0.9)
/// 모더 속도 상수
#define LowV 1
#define MidV 2
#define HighV 3

// speed, state 초기화. 
volatile int speed = LowV;
volatile int state = GO; //GO,STOP,BREAK

ISR(INT4_vect){                          //sw1을 누르면 정지하고, 다시 누르면 진행
   _delay_ms(100);
   EIFR = 1 <<4;
   
   if((PINE&0x10)==0x10)
   return;
   
   //toggle state 
   if (state == GO){
      state = STOP;
   }
   else if (state == STOP){
      state = GO;
      //STOP에서 GO가 되면 speed는 기존 상태 유지. 
   }
   
}

ISR(INT5_vect){                          //sw2를 누르면 선풍기의 속도 변화. 
   _delay_ms(100);
   EIFR= 1<<5;
   if((PINE & 0x20)==0x20)
   return;
   
   //speed 약 -> 중 -> 강
   if (speed == LowV ){
      speed = MidV;
   }
   else if (speed == MidV){
      speed = HighV;
   }
   else if (speed == HighV){
      speed = LowV;
   }
   
}

int main(void)
{
   
   DDRB = 0xf0;              // PB7~4 출력 처리
   DDRA = 0x0f;              // LED 출력
   PORTB = MOTOR_STANDBY;    // PORTB의 초기상태: STANDBY
   TCCR2 = 0x6b;

   
   // 인터럽트 포트 설정
   DDRE = 0x00;              // PE 포트를 입력 신호로 사용
   sei();
   
   EICRB=0x0a;               // INT4, INT5 트리거는 falling edge
   EIMSK=0x30;               // INT4, INT5 인터럽트 enable
   
      while (1)
   {
      
      //state가 Go일 경우 시계방향으로 돌며, speed의 값에 따라 모더의 속도를 조절함. 
      if (state == GO){
         PORTB = MOTOR_CW;
         if (speed == LowV){
            PORTA = 0x02;
            OCR2 = LOW_SPEED;
            _delay_ms(100);
         }
         else if (speed == MidV){
            PORTA = 0x04;
            OCR2 = MID_SPEED;
            _delay_ms(100);
         }
         else if (speed == HighV){
            PORTA = 0x08;
            OCR2 = HIGH_SPEED;
            _delay_ms(100);
         }
      }
      
      //state가 stop일 경우 동작을 정지함. 
      else if (state == STOP){
         PORTB = MOTOR_STOP;
         PORTA = 0x01;
         OCR2 = STOP_SPEED;
         _delay_ms(100);
      }
     
   }
}
