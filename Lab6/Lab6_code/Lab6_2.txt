/*
 * Lab6_2.c
 * 문제2. 주변 광량이 10럭스 이하이면 커튼이 내려오고(DC모터 5초간 정방향 회전)
         주변 광량이 20럭스 이상이면 커튼이 올라가는( DC모트 5초간 역방향 회전 '자동 커튼 시스템'을 만든다. 
 */ 

#include <avr/io.h>
#define F_CPU 16000000UL
#define __DELAY_BACKWARD_COMPATIBLE__
#include <util/delay.h>

// 모터 제어 (PB7=AIN1, PB6=AIN2, PB5=PWMA, PB4=STBY)
#define MOTOR_CW 0xb0          // 모터 Forward : AIN1=1, AIN2=0, PWMA=1, STBY=1
#define MOTOR_CCW 0x70         // 모터 Reverse : AIN1=0, AIN2=1, PWMA=1, STBY=1
#define MOTOR_STOP 0x30        // 모터 Stop : AIN1=0, AIN2=0, PWMA=1, STBY=1

// 광량에 따른 ADC값. 
#define CDS_10 400             // 10럭스
#define CDS_20 500 

// state : ON / OFF
#define OFF 0
#define ON 1
volatile int state = ON;       // state 초기값 ON으로 설정

void init_adc();
unsigned short read_adc();     // unsigned short는 unsigned int와 동일한 크기

int main(void)
{
   unsigned short value;
   int motor;                // 모터 상태를 나타내는 변수
   
   DDRA = 0xff;              // LED 포트 출력모드.
   DDRF = 0x00;              // ADC 포트 입력모드.
   DDRB = 0xf0;              // PB7~4 출력.
   
   init_adc();               // ADC 초기화.
   
   while(1){
      value = read_adc();    // AD변환 시작 및 결과 읽어오기.
      
      if (state == ON){
         if (value <= CDS_10){        // 주변 광량이 10럭스 이하이면 DC모터 5초간 정방향 회전
            PORTB = MOTOR_CW;
			motor = MOTOR_CW;
            PORTA = 0x0f;             // LED 0~3 동작
            _delay_ms(5000);          // 5초간 동작
            state = OFF;
         }
         else if( value >= CDS_20){   // 주변 광량이 20럭스 이상이면 DC모터 5초간 역방향 회전
            PORTB = MOTOR_CCW;    
			motor = MOTOR_CCW;
            PORTA = 0xf0;             // LED 4~7 동작
            _delay_ms(5000);          // 5초간 동작
            state = OFF;
         }
      }
      
      else if(state == OFF){
         PORTB = MOTOR_STOP;
         PORTA = 0x00;
		 if ((motor == MOTOR_CCW) && (value <= CDS_10))     // state가 OFF되기 전 motor의 상태가 역방향이고, 주변 광량이 10럭스 이하면 state를 ON으로 변경
		 {
			 state = ON;
		 }
		 else if ((motor == MOTOR_CW) && (value >= CDS_20)) // state가 OFF되기 전 motor의 상태가 정방향이고, 주변 광량이 20럭스 이상이면 state를 ON으로 변경
		 {
			 state = ON;
		 }
      }  
   }
}

void init_adc(){
   //ADC와 관련하여 필요한 레지스터(ADMUX, ADCSRA) 초기화.
   ADMUX = 0x40;
   ADCSRA = 0x87;
}
unsigned short read_adc(){
   // AD변환 후 변환된 값(ADCH, ADCL) 반환.
   unsigned char adc_low, adc_high;
   unsigned short value;
   ADCSRA |= 0x40;
   while((ADCSRA & 0x10) != 0x10)
   ;
   adc_low = ADCL;
   adc_high = ADCH;
   value = (adc_high << 8) | adc_low;
   return value;
}